# 브루트포스 알고리즘보다 DP를 활용하면 더 간단하게 해결할 수 있다.
# 자신의 n값이 넘지 않은 경우까지 제곱수의 개수를 따져보고 나머지 제곱수 1를 추가해준다.
# n= 2일 경우, 2보다 작거나 같은 제곱수는 1이 있고, dp[1]에 1을 더해준다.
# n= 3일 경우, 3보다 작거나 같은 제곱수는 1이 있고, dp[2]에 1을 더해준다.
# n= 4일 경우, 4보다 작거나 같은 제곱수는 1과 2가 있고 dp[3], dp[0] 중 작은 값을 택한뒤 1을 더해준다 => dp[0] = 0이므로 dp[4] = 0 + 1이 된다.

N = int(input())
dp = [0,1]

for i in range(2, N+1):
    min_value = 99999999999999
    j = 1

    while (j**2) <= i:
        min_value = min(min_value, dp[i - (j**2)])
        j += 1

    dp.append(min_value + 1)

print(dp[N])